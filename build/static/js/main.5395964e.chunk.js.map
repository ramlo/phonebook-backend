{"version":3,"sources":["components/Persons.js","components/Filter.js","components/PersonForm.js","services/persons.js","components/ShowMessage.js","app.js","index.js"],"names":["Persons","persons","deletePerson","Fragment","map","person","key","id","name","number","onClick","Filter","filter","filterPersons","value","onChange","PersonForm","addPerson","newName","setNewName","newNumber","setNewNumber","onSubmit","event","target","evento","type","baseUrl","axios","get","then","response","data","personNew","post","delete","console","log","put","ShowMessage","message","style","color","error","background","fontSize","fontStyle","borderStyle","borderRadius","padding","marginBottom","App","useState","setPersons","useEffect","personsService","setFilter","showAll","setShowAll","setMessage","setError","personsToShow","toLowerCase","indexOf","preventDefault","personAlreadyExist","find","window","confirm","alert","p","setTimeout","catch","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5395964e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({persons, deletePerson}) =>{\r\n    return (\r\n        <React.Fragment>\r\n        {persons.map(person =>{\r\n            return(\r\n                <div key={person.id}>\r\n                {person.name} {person.number}\r\n                 <button onClick={()=>deletePerson(person)}>delete</button>\r\n                </div>)\r\n        })\r\n        }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst Filter = ({filter,filterPersons}) =>{\r\n    return (\r\n      <div>\r\n        filter shown with:\r\n        <input value={filter} onChange={filterPersons} />\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Filter","import React from 'react'\r\n\r\nconst PersonForm = ({addPerson,newName,setNewName,newNumber,setNewNumber})=>{  \r\n    return (\r\n      <form onSubmit={addPerson}>\r\n          <div>\r\n            name: \r\n            <input value={newName} \r\n                onChange={(event)=>setNewName(event.target.value)}/>\r\n          </div>\r\n          <div>number: \r\n              <input value={newNumber}\r\n                onChange={(evento)=>setNewNumber(evento.target.value)} />\r\n          </div>\r\n          <div>\r\n            <button type=\"submit\">add</button>\r\n          </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm","import axios from 'axios'\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () =>{\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst save = (personNew) =>{\r\n    const request = axios.post(baseUrl,personNew)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst deletePerson = (id) =>{\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response =>response.data)\r\n}\r\n\r\nconst update = (id,person) =>{\r\n    console.log(\"Person To Be Updated\",person);\r\n    const request = axios.put(`${baseUrl}/${id}`, person)\r\n    return request.then(response =>response.data)\r\n}\r\n\r\nexport default {getAll,save,deletePerson,update}","import React from 'react'\r\n\r\nconst ShowMessage = ({message, error}) =>{\r\n    const style = {\r\n        color: error?'red':'green',\r\n        background: 'lightgrey',\r\n        fontSize: 20,\r\n        fontStyle: 'solid',\r\n        borderStyle: 'solid',\r\n        borderRadius: 5,\r\n        padding: 10,\r\n        marginBottom: 10\r\n    }\r\n\r\n    if(message===null){\r\n        return null\r\n    }\r\n    return(\r\n        <div style={style}>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ShowMessage","import React, {useState, useEffect} from 'react'\r\nimport Persons from './components/Persons'\r\nimport Filter from './components/Filter'\r\nimport PersonForm from './components/PersonForm'\r\nimport personsService from './services/persons'\r\nimport ShowMessage from './components/ShowMessage'\r\n\r\nconst App = () => {\r\n\r\n  const [ persons, setPersons ] = useState([])\r\n  \r\n  const hook = ()=>{\r\n    personsService\r\n      .getAll()\r\n      .then(persons=> {\r\n        setPersons(persons)\r\n      })\r\n  }\r\n\r\n  useEffect(hook,[])\r\n\r\n  const [ newName, setNewName ] = useState('')\r\n  const [ newNumber, setNewNumber ] = useState('')\r\n  const [ filter, setFilter ] = useState('')\r\n  const [ showAll, setShowAll ] = useState(true)\r\n  const [ message, setMessage ] = useState(null)\r\n  const [ error, setError ] = useState(false)\r\n  \r\n  const personsToShow = showAll\r\n    ? persons\r\n    : persons.filter(person => person.name.toLowerCase().indexOf(filter.toLowerCase()) !== -1)\r\n\r\n  const addPerson = (event)=>{\r\n    event.preventDefault();\r\n    const valuesCompleted = newName && newNumber\r\n    \r\n    if(valuesCompleted){\r\n    \r\n      const personAlreadyExist = persons.find(\r\n        person =>{\r\n          return person.name === newName\r\n        }\r\n      )\r\n      \r\n      if(personAlreadyExist){\r\n        const confirm = personAlreadyExist.number !== newNumber \r\n          ? window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\r\n          : alert(`${newName} is already added to phonebook`)\r\n        \r\n        if(confirm){\r\n          const updatedPerson=personsService.update(personAlreadyExist.id, {name:newName, number:newNumber})\r\n          updatedPerson.then( response =>\r\n            {\r\n              setPersons(persons.map(\r\n                p => p.id  !== response.id ? p : response \r\n                )\r\n              )\r\n              setMessage(`Number Changed ${response.name} `)\r\n              \r\n              setTimeout(()=>{\r\n                setMessage(null)\r\n              },3000)\r\n          })\r\n          .catch(error => {\r\n            setMessage(`Information of ${newName} has already been removed from server`)\r\n            setError(true)\r\n            setPersons(persons.filter(p => p.id !== personAlreadyExist.id))\r\n\r\n            setTimeout(()=>{\r\n              setMessage(null)\r\n              setError(false)\r\n            },3000)\r\n          })\r\n        }\r\n\r\n      }else{\r\n        let newPerson= {name:newName, number:newNumber}\r\n        personsService.save(newPerson).then (person =>{\r\n          setPersons(persons.concat(person))\r\n          \r\n          setMessage(`Added ${person.name} `)\r\n          \r\n          setTimeout(()=>{\r\n            setMessage(null)\r\n          },3000)\r\n        })        \r\n      }\r\n      \r\n      setNewName('')\r\n      setNewNumber('')\r\n    }else{\r\n      alert(`You need to complete the name and the number`)\r\n    }   \r\n  }\r\n  \r\n  const filterPersons = event => {\r\n    setFilter(event.target.value)\r\n    if(event.target.value){\r\n      setShowAll(false)\r\n    }else{\r\n      setShowAll(true)\r\n    }\r\n  }\r\n  \r\n  const deletePerson = (person) => {\r\n    if(window.confirm(`Delete ${person.name}`)){\r\n      personsService.deletePerson(person.id)\r\n      //setNotes(notes.filter(n => n.id !== id))\r\n      setPersons(persons.filter(p => p.id !== person.id))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <ShowMessage message={message} error={error}/>\r\n        <Filter filter={filter} \r\n          filterPersons={filterPersons} />\r\n      \r\n      <h3>add a new</h3>\r\n        <PersonForm \r\n          addPerson={addPerson} \r\n          newName={newName} \r\n          setNewName={setNewName}\r\n          newNumber={newNumber}\r\n          setNewNumber={setNewNumber} />\r\n      \r\n      <h3>Numbers</h3>\r\n        <Persons persons={personsToShow} deletePerson={deletePerson} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './app'\n\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n)"],"sourceRoot":""}